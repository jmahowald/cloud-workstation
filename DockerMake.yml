devbase:
 FROM: gliderlabs/alpine:3.3
 build: |
  RUN apk add --update --no-cache \
      ca-certificates curl wget make bash openssh-client \
      bash git sshpass rsync
python:
 requires:
  - devbase
 build: |
   RUN apk add --update --no-cache python \
      python-dev \
      py-pip \
    && pip install virtualenv \
    && rm -rf /var/cache/apk/* \
    && pip install --upgrade pip
awscli:
  requires:
    - python
  build: |
    RUN pip install awscli
    COPY build/aws/aws_bash_helpers.sh /root/.bashrc
clitools:
  requires:
    - devbase
  build: |
    COPY ./build/scripts/*  /usr/local/bin/ 
    RUN pip install docopts && chmod 755 /usr/local/bin/*
terraform:
  requires:
    - devbase
  build: |
    ARG TERRAFORM_VERSION=0.8.6
    RUN  wget -P /tmp https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip && \
        unzip /tmp/terraform_${TERRAFORM_VERSION}_linux_amd64.zip -d /usr/bin && \
        rm -rf /tmp/* && \
        rm -rf /var/tmp/*
    RUN wget -P /tmp https://github.com/CiscoCloud/terraform.py/blob/master/terraform.py && \
       mv /tmp/terraform.py /usr/local/bin && chmod 755 /usr/local/bin/terraform.py
ansible:
  requires:
    - python
  # Lifted from https://github.com/gesellix/ansible-docker/blob/master/Dockerfile
  build: |
    ARG TERRAFORM_INVENTORY_VERSION=v0.6.1
    ENV PATH /ansible/bin:/bin:/usr/bin:/sbin:/usr/sbin:/usr/local/bin
    ENV PYTHONPATH /ansible/lib
    ENV ANSIBLE_LIBRARY /ansible/library

    RUN apk --no-cache add --update -t deps git gcc make musl-dev libxml2-dev \
        libxslt-dev openssl-dev libffi-dev
    RUN pip install ansible

    RUN mkdir -p $ANSIBLE_LIBRARY && wget https://github.com/adammck/terraform-inventory/releases/download/$TERRAFORM_INVENTORY_VERSION/terraform-inventory_${TERRAFORM_INVENTORY_VERSION}_linux_amd64.zip \
        && unzip terraform-inventory_${TERRAFORM_INVENTORY_VERSION}_linux_amd64.zip \
        && chmod 755 terraform-inventory && mv terraform-inventory $ANSIBLE_LIBRARY/ && rm terraform-inventory_${TERRAFORM_INVENTORY_VERSION}_linux_amd64.zip
    RUN apk del --purge deps;

testing:
  build: |
    RUN git clone https://github.com/calj/bats.git && bats/install.sh /usr/local  \
      && rm -rf bats

travis:
  build:
cloud-workstation:
  requires:
    - awscli
    - terraform
    #- ansible
    - clitools
    - testing
# TODO this build stuff should actually be in devbase, but I don't want to rebuild right now
  build: |
    WORKDIR /workspace
    CMD /bin/bash
